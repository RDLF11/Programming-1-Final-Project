/*

//Test print of the backend matrix
for (int r = 0; r < backendGameBoard.length; r++) {
    for (int c = 0; c < backendGameBoard[0].length; c++) {
        System.out.print(backendGameBoard[r][c] + "(" + r + "," + c + ")" + "\t");
    }
    System.out.println();
}

*/

        /*
        //Test print names and tags
        System.out.println("\nPlayer 1 data:" +
                           "\nTag: " + p1tag +
                           "\nChip: " + p1chip);
        
        System.out.println("\nPlayer 2 data:" +
                           "\nTag: " + p2tag +
                           "\nChip: " + p2chip);
    
        System.out.println("\nPress \"Enter\" when you're ready");
            //line below is to clear the scanners input
            input.nextLine();
            enter = input.nextLine();
        */

        //Clear selections out to start the game
        //clear();



clean userGameBoard with arrays:

//write an array with the positions to quickly go over the replacing of the blank spacess
/*
        final int[][] emptyUserGameBoard = {
                                            {1, 3},
                                            {1, 9},
                                            {1, 15},
                                            {3, 3},
                                            {3, 9},
                                            {3, 15},
                                            {5, 3},
                                            {5, 9},
                                            {5, 15}
        };

        //declared vars for subtituting in backendGameBoard positions
        int i, j;

        for (int r = 0; r < emptyUserGameBoard.length; r++) {

            //assigning position value to our variable to clean
            i = emptyUserGameBoard[r][0];
            j = emptyUserGameBoard[r][1];

            backendGameBoard[i][j] = ' ';
            
//            for (int c = 0; c < emptyUserGameBoard[0].length; c++) {
//                
//                for (int k = 1; k < emptyUserGameBoard[0].length; k++) {

//                }
//            }
            
        }
     
        int[][] positionValues = {
                                    {1, 3},
                                    {1, 9},
                                    {1, 15},
                                    {3, 3},
                                    {3, 9},
                                    {3, 15},
                                    {5, 3},
                                    {5, 9},
                                    {5, 15}
                                };

        int row = 0;
        int column = 0;

        for (int r = 0; r < positionValues.length; r++) {

            positionValues[r][0] = row;

            for (int c = 0; c < positionValues[0].length; c++) {

                positionValues[r][c] = column;
            
            userGameBoard[row][column] = ' ';
            }
        }
*/